#!/bin/bash

# Скрипт для инициализации контекста проекта

# Шаг 1: Создание .context/README.md
FILE_PATH=".context/README.md"
if [ -f "$FILE_PATH" ]; then
    echo "ℹ️ Файл уже существует: $FILE_PATH. Пропускаем создание."
else
    read -r -d '' FILE_CONTENT << 'EOF'
### 1. ОБЗОР СИСТЕМЫ
- Введение и назначение проекта (описывай бизнес-ценности, а не просто технологический стек)
- Ключевые функции и возможности
- Архитектурный подход и принципы

### 2. ТЕХНОЛОГИЧЕСКИЙ СТЕК
- Frontend технологии (фреймворки, библиотеки, инструменты)
- Backend технологии (языки, фреймворки, базы данных)
- Инструменты разработки и сборки
- Внешние сервисы и API

### 3. АРХИТЕКТУРА ПРОЕКТА
- Общая архитектурная схема (с Mermaid диаграммами)
- Принципы проектирования
- Паттерны и подходы
- Взаимодействие компонентов

### 4. СТРУКТУРА КАТАЛОГОВ
- Корневая структура проекта
- Организация backend кода
- Организация frontend кода
- Описание назначения ключевых директорий

### 5. FRONTEND АРХИТЕКТУРА
- Архитектурный паттерн (FSD, модульная архитектура и т.д.)
- Структура компонентов
- Система управления состоянием
- Маршрутизация и навигация
- Система сборки и стилизации

### 6. BACKEND АРХИТЕКТУРА
- API дизайн и принципы
- Структура endpoints
- Модульная архитектура
- Система безопасности
- Обработка данных

### 7. ОСНОВНЫЕ МОДУЛИ
Для каждого ключевого модуля:
- Назначение и функциональность
- Архитектурная схема
- Ключевые компоненты
- API интерфейсы
- Конфигурация и настройки
EOF

    dir=$(dirname "$FILE_PATH")
    if [ ! -z "$dir" ] && [ "$dir" != "." ]; then
        mkdir -p "$dir"
    fi

    printf '%s' "$FILE_CONTENT" > "$FILE_PATH"
    echo "✅ Файл создан: $(pwd)/$FILE_PATH"
fi

# Шаг 2: Создание .context/docs/INDEX.md
FILE_PATH=".context/docs/INDEX.md"
if [ -f "$FILE_PATH" ]; then
    echo "ℹ️ Файл уже существует: $FILE_PATH. Пропускаем создание."
else
    read -r -d '' FILE_CONTENT << 'EOF'
# Проектная документация

Этот файл содержит документацию ключевых частей проекта.

ВАЖНО: документация служит хорошей отправной точкой, но может не всегда быть актуальной. Исходный код - единственный источник истины.

## Основные разделы


## TODO
EOF

    dir=$(dirname "$FILE_PATH")
    if [ ! -z "$dir" ] && [ "$dir" != "." ]; then
        mkdir -p "$dir"
    fi

    printf '%s' "$FILE_CONTENT" > "$FILE_PATH"
    echo "✅ Файл создан: $(pwd)/$FILE_PATH"
fi

# Шаг 3: Создание каталогов
DIRECTORIES=(".context/tips" ".context/epics" ".context/tasks")
for dir in "${DIRECTORIES[@]}"; do
    if [ -d "$dir" ]; then
        echo "ℹ️ Директория уже существует: $dir. Пропускаем создание."
    else
        mkdir -p "$dir"
        echo "✅ Директория создана: $(pwd)/$dir"
    fi
done

# Шаг 4: Создание .context/tips/INDEX.md
FILE_PATH=".context/tips/INDEX.md"
if [ -f "$FILE_PATH" ]; then
    echo "ℹ️ Файл уже существует: $FILE_PATH. Пропускаем создание."
else
    read -r -d '' FILE_CONTENT << 'EOF'
# Project Tips and Best Practices

В этом файле содержатся часто используемые действия проекта и полезные советы по выполнению распространенных задач.

Шаблон заполняется в формате ЕСЛИ {требование} -> ИСПОЛЬЗУЙ {ссылка на документ}

Например: ЕСЛИ необходимо модальное окно -> ИСПОЛЬЗУЙ [modal_system.md](Система модальных окон)

## Common Tasks


## Code Patterns
EOF

    dir=$(dirname "$FILE_PATH")
    if [ ! -z "$dir" ] && [ "$dir" != "." ]; then
        mkdir -p "$dir"
    fi

    printf '%s' "$FILE_CONTENT" > "$FILE_PATH"
    echo "✅ Файл создан: $(pwd)/$FILE_PATH"
fi

echo "✅ Все шаги инициализации контекста выполнены."